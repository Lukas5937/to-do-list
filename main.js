(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([e.id,".body-grid {\n    display: grid;\n    grid-template-columns: 30% 1fr;\n}\n\n.sidebar {\n    grid-column: 1 / 2;\n    grid-row: 1;\n}\n\n.to-do-list-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    margin-top: 16px;\n}\n\n.to-do-wrapper {\n    display: flex;\n    gap: 16px;\n}\n\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,SAAS;AACb",sourcesContent:[".body-grid {\n    display: grid;\n    grid-template-columns: 30% 1fr;\n}\n\n.sidebar {\n    grid-column: 1 / 2;\n    grid-row: 1;\n}\n\n.to-do-list-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    margin-top: 16px;\n}\n\n.to-do-wrapper {\n    display: flex;\n    gap: 16px;\n}\n\n\n"],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var u=0;u<e.length;u++){var d=[].concat(e[u]);o&&a[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(r," */");return[t].concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var c={},a=[],i=0;i<e.length;i++){var s=e[i],u=o.base?s[0]+o.base:s[0],d=c[u]||0,l="".concat(u," ").concat(d);c[u]=d+1;var p=n(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var f=r(m,o);o.byIndex=i,t.splice(i,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var c=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=n(c[a]);t[i].references--}for(var s=o(e,r),u=0;u<c.length;u++){var d=n(c[u]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}c=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var c=t[o]={id:o,exports:{}};return e[o](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e=function(){let e=[];return{projectList:e,getProjectList:()=>e,generalTasksCreator:function(){const t={title:"General Tasks",description:"This is the default folder for all To dos.",toDosList:[]};e.push(t);const n=r.createProjectParagraph(t);return console.log(e),{generalTasks:t,projectParagraph:n}},completedCreator:function(){const t={title:"Completed",description:"This folder contains all completed projects.",toDosList:[]};e.push(t);const n=r.createProjectParagraph(t);return console.log(e),{completed:t,projectParagraph:n}},newProjectCreator:function(){const n={...t(),toDosList:[]};e.push(n),console.log(e);const o=r.createProjectParagraph(n);return console.log(e),{newProject:n,projectParagraph:o}}}}();function t(){const e=document.querySelector("#project-title"),t=document.querySelector("#project-description");return{title:e.value,description:t.value}}const o={createToDoParagraph:function({title:e}){const t=document.createElement("p");return t.classList.add("to-do-paragraph"),t.textContent=e,t},createChangeProjectButton:function({title:e}){const t=document.createElement("button");return t.textContent="Change Project",t.classList.add("change-project-button"),t.classList.add(`${e}`),t},createMarkCompletedButton:function({title:e}){const t=document.createElement("button");return t.textContent="Mark as completed",t.classList.add("mark-completed-button"),t.classList.add(`${e}`),t},createDeleteButton:function({title:e}){const t=document.createElement("button");return t.textContent="delete",t.classList.add("delete-button"),t.classList.add(`${e}`),t},createChangePriorityButton:function({title:e}){const t=document.createElement("button");return t.textContent="change priority",t.classList.add("change-priority-button"),t.classList.add(`${e}`),t}},r=function(){const e=document.querySelector(".project-list-wrapper");return{createProjectParagraph:function({title:t}){const n=document.createElement("p");return n.textContent=t,e.appendChild(n),n}}}(),c=function(e){const t=document.querySelector(".main");a(),document.querySelector(".old-project-page").remove();const n=document.createElement("div");t.append(n);const o=document.createElement("h2");o.textContent=e.title,n.append(o),e.toDosList.forEach((e=>{const t=document.createElement("p");t.textContent=e.title,n.append(t)})),n.classList.add("old-project-page")},a=function(){document.querySelector(".home").style.display="none"};function i(t){e.getProjectList().forEach((e=>{t.project===e.title&&e.toDosList.push(t)}))}function s(t){e.getProjectList().forEach((e=>{if(t.oldProject!==e.title)return;console.log(e.toDosList);const n=e.toDosList.indexOf(t);e.toDosList.splice(n,1)}))}var u=n(379),d=n.n(u),l=n(795),p=n.n(l),m=n(569),f=n.n(m),g=n(565),h=n.n(g),v=n(216),y=n.n(v),A=n(589),b=n.n(A),C=n(28),j={};j.styleTagTransform=b(),j.setAttributes=h(),j.insert=f().bind(null,"head"),j.domAPI=p(),j.insertStyleElement=y(),d()(C.Z,j),C.Z&&C.Z.locals&&C.Z.locals;const E=document.querySelector(".new-to-do-button"),L=document.querySelector("#create-to-do-button"),P=document.querySelector(".new-project-button"),S=document.querySelector("#create-project-button"),x=document.querySelector("#to-do-dialog"),k=document.querySelector("#project-dialog"),B=document.createElement("div");B.classList.add("body-grid");const w=document.querySelector(".main"),q=document.querySelector(".sidebar");B.appendChild(w),B.appendChild(q),document.body.appendChild(B);const T=document.querySelector(".home-button");document.addEventListener("DOMContentLoaded",(()=>{const t=e.generalTasksCreator(),n=e.completedCreator(),o=t.generalTasks,r=n.completed;t.projectParagraph.addEventListener("click",(()=>c(o))),n.projectParagraph.addEventListener("click",(()=>c(r)))})),E.addEventListener("click",(()=>{x.showModal()})),L.addEventListener("click",(()=>{const t=document.querySelector(".to-do-list-wrapper"),n=document.createElement("div");n.classList.add("to-do-wrapper"),t.append(n);const r=function(){const e=function(){const e=document.querySelector("#title"),t=document.querySelector("#description"),n=document.querySelector("#low"),o=document.querySelector("#medium"),r=document.querySelector("#high"),c=document.querySelector("#dueDate"),a=document.querySelector("#notes");return{title:e.value,description:t.value,priority:function(){let e="";return n.checked?e=n.value:o.checked?e=o.value:r.checked&&(e=r.value),e}(),dueDate:c.value,notes:a.value}}(),t=Object.assign({},e,{project:"General Tasks"}),n=o.createToDoParagraph(t),r=o.createChangeProjectButton(t),c=o.createMarkCompletedButton(t),a=o.createChangePriorityButton(t),s=o.createDeleteButton(t);return i(t),{newToDo:t,toDoParagraph:n,changeProjectButton:r,markCompletedButton:c,deleteButton:s,changePriorityButton:a}}(),c=r.newToDo;console.log(c);const a=r.toDoParagraph,u=r.changeProjectButton,d=r.markCompletedButton,l=r.changePriorityButton,p=r.deleteButton;let m=c.priority;const f=function(){"low"===m?a.style.color="green":"medium"===m?a.style.color="orange":"high"===m&&(a.style.color="red")};f(),n.append(a,u,d,l,p),d.addEventListener("click",(()=>{!function(e){e.oldProject=e.project,e.project="Completed",i(e),s(e)}(c),n.remove()})),p.addEventListener("click",(()=>{!function(e){s(e),o.deleteToDoParagraph(e)}(c),n.remove()})),u.addEventListener("click",(()=>{const t=function(){const t=document.createElement("div");t.classList.add("project-selection-wrapper");const n=e.getProjectList(),o=[];n.forEach((({title:e})=>{const n=document.createElement("div"),r=document.createElement("input");r.setAttribute("type","radio"),r.setAttribute("id",e),r.setAttribute("value",e);const c=document.createElement("label");c.textContent=e,c.setAttribute("for",e),n.append(r,c),t.append(n),o.push(r)}));const r=document.createElement("button");return r.setAttribute("type","button"),r.textContent="Change project",t.append(r),{projectSelectionWrapper:t,submitButton:r,radioButtonArray:o}}(),o=t.projectSelectionWrapper;n.append(o);const r=t.submitButton,a=t.radioButtonArray;r.addEventListener("click",(()=>{!function(e,t){e.oldProject=e.project;const n=function(e){let t="";return e.forEach((e=>{!0===e.checked&&(t=e.value)})),t}(t);e.project=n,console.log(e.oldProject),console.log(e.project),i(e),s(e)}(c,a),o.remove()}))})),l.addEventListener("click",(()=>{const e=function(){const e=document.createElement("div");e.classList.add("priority-selection-wrapper");const t=function(t){const n=document.createElement("div"),o=document.createElement("input");o.setAttribute("type","radio"),o.setAttribute("id",t),o.setAttribute("value",t);const r=document.createElement("label");return r.textContent=t,r.setAttribute("for",t),n.append(o,r),e.append(n),o},n=t("low"),o=t("medium"),r=t("high"),c=document.createElement("button");c.setAttribute("type","button"),c.textContent="Change priority",e.append(c);const a=[n,o,r];return console.log(a),{prioritySelectionWrapper:e,submitButton:c,radioButtonArray:a}}(),t=e.prioritySelectionWrapper;n.append(t);const o=e.submitButton,r=e.radioButtonArray;o.addEventListener("click",(()=>{m=function(e,t){return function(e){let t="";return e.forEach((e=>{!0===e.checked&&(t=e.value)})),t}(t)}(0,r),f(),t.remove()}))})),x.close()})),P.addEventListener("click",(()=>{k.showModal()})),S.addEventListener("click",(()=>{const t=e.newProjectCreator(),n=t.newProject;t.projectParagraph.addEventListener("click",(()=>c(n))),k.close()})),T.addEventListener("click",(function(){const e=document.querySelector(".main");document.querySelector(".old-project-page").remove();const t=document.createElement("div");t.classList.add("old-project-page"),e.append(t),document.querySelector(".home").style.display="block"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,